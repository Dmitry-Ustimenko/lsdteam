@using LeagueSoldierDeathTeam.Site.Classes
@using LeagueSoldierDeathTeam.Site.Controllers
@model LeagueSoldierDeathTeam.Site.Models.AccountProfile.UserMessageModel
@{
	ViewBag.Title = Model.Id.HasValue ? "Редактирование сообщения" : "Новое сообщение";
}

<div class="transparent-border">
	<div class="simple-page-body section-shadow">
		<div class="section-module-header">
			<div class="module-title">@ViewBag.Title</div>
		</div>
		<div class="section-module-body">
			<div class="back">
				<a class="button" href="@(WebBuilder.BuildActionUrl<AccountProfileController>(m => m.Messages()))">
					<span class="back-arrow"></span>Вернуться к сообщениям
				</a>
			</div>
			<div class="form-container">
				@using (Html.BeginForm("ReplyMessage", "AccountProfile", FormMethod.Post))
				{
					@Html.HiddenFor(m => m.Id)
					<div class="form-border">
						<div class="container-item">
							@Html.LabelFor(m => m.RecipientName)
							<div class="field-container">
								@Html.TextBoxFor(m => m.RecipientName)
								@Html.ValidationMessageFor(m => m.RecipientName)
							</div>
						</div>
						<div class="container-item">
							@Html.LabelFor(m => m.Title)
							<div class="field-container">
								@Html.TextBoxFor(m => m.Title)
								@Html.ValidationMessageFor(m => m.Title)
							</div>
						</div>
						<div class="container-item">
							@Html.LabelFor(m => m.Description)
							<div class="field-container">
								@Html.TextAreaFor(m => m.Description, new { @rows = "10" })
								@Html.ValidationMessageFor(m => m.Description)
							</div>
						</div>
					</div>
					<div class="form-buttons">
						<span class="preview-link">Предварительный просмотр</span>
						<input type="submit" value="Отправить" />
					</div>
				}
				<div style="display: none;" class="form-border">

				</div>
			</div>
		</div>
	</div>
</div>