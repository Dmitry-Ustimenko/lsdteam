@using LeagueSoldierDeathTeam.Business.Classes.Enums
@using LeagueSoldierDeathTeam.Site.Classes
@using LeagueSoldierDeathTeam.Site.Controllers
@model LeagueSoldierDeathTeam.Business.Dto.UserMessageData
@{
	ViewBag.Title = "Просмотр сообщения";
}

<div class="transparent-border">
	<div class="simple-page-body section-shadow">
		<div class="section-module-header">
			<div class="module-title">@ViewBag.Title</div>
		</div>
		<div class="section-module-body">
			<div class="back">
				<a class="button" href="@(WebBuilder.BuildActionUrl<AccountProfileController>(m => m.Messages(),
						new RouteValueDictionary(new Dictionary<string, object> { { "type", Model.Type } })))">
					<span class="back-arrow"></span>Вернуться к сообщениям
				</a>
			</div>
			<div class="form-container">
				@using (Html.BeginForm("EditMessage", "AccountProfile", FormMethod.Post))
				{
					<div class="form-border">
						<div class="view-message-commands">
							<span class="messages-commands">
								@if (Model.Type == MessageTypeEnum.Inbox || Model.Type == MessageTypeEnum.Sent)
								{
									<span class="green command" data-id="@Model.Id" data-action="saveMessage">сохранить</span>
									@:или
								}
								<span class="darkred command" data-id="@Model.Id" data-action="deleteMessage">удалить</span>
							</span>
						</div>
						<div>
							<div class="view-message-profile">
								<div class="center user-name">@Model.SenderName</div>
								<div class="center">
									<img class="photo" src="@Html.Raw(!string.IsNullOrWhiteSpace(Model.SenderPhoto) ? Model.SenderPhoto : Constants.DefaultPhotoPath)" alt="Фото">
								</div>
							</div>
							<div class="view-message-description">
								<div class="message-title">@Model.Title</div>
								<div class="message-date">@Model.CreateDate.ToString("dd MMMM yyyy HH:mm")</div>
								<div class="form-border message-description">@MvcHtmlString.Create(Model.Description)</div>
							</div>
						</div>
					</div>
					<div class="form-buttons">
						@if (Model.Type == MessageTypeEnum.Inbox && Model.SenderId.HasValue)
						{
							<a class="preview-link" href="@(WebBuilder.BuildActionUrl<AccountProfileController>(m => m.ReplyMessageWithQuote(Model.Id)))">Ответить с цитатой</a>
							<a class="button big-button" href="@(WebBuilder.BuildActionUrl<AccountProfileController>(m => m.ReplyMessage(Model.Id)))">
								Ответить
							</a>
						}
						else if (Model.Type == MessageTypeEnum.Sent && !Model.IsRead)
						{
							<a class="button big-button" href="@(WebBuilder.BuildActionUrl<AccountProfileController>(m => m.EditMessage(Model.Id)))">
								Редактировать
							</a>
						}
					</div>
				}
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
	$(document).ready(function () {
		site.message.initView.init({
			urls: {
				saveAsDraft: '@(WebBuilder.BuildActionUrl<AccountProfileController>(m => m.SaveMessageAsDraft(default(int))))',
				deleteMessage: '@(WebBuilder.BuildActionUrl<AccountProfileController>(m => m.DeleteMessage(default(int))))',
				redirectAction: '@(WebBuilder.BuildActionUrl<AccountProfileController>(m => m.Messages()))'
			}
		});
	});
</script>

