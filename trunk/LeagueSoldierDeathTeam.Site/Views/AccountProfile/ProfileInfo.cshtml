@using System.Globalization
@using LeagueSoldierDeathTeam.Site.Classes
@using LeagueSoldierDeathTeam.Site.Controllers
@model LeagueSoldierDeathTeam.Site.Models.AccountProfile.UserProfileModel

@{
	ViewBag.Title = "Профиль пользователя";
	var currentUser = AppContext.Current.CurrentUser;
	var isMainAdminOrAdmin = currentUser != null && (currentUser.IsMainAdmin || currentUser.IsAdmin);
	var isAdminOrMe = currentUser != null && (isMainAdminOrAdmin || currentUser.IsMe(Model.UserId));
}
<div class="transparent-border">
	<div class="simple-page-body section-shadow">
		<div class="section-module-header">
			<div class="module-title">Профиль пользователя - <span class="header-name">@Model.UserName</span></div>
		</div>
		<div class="profile-left-bar">
			<div class="user-photo">
				<img src="@Html.Raw(!string.IsNullOrWhiteSpace(Model.PhotoPath) ? Model.PhotoPath : Constants.DefaultPhotoPath)" alt="Фото">
				@if (isAdminOrMe)
				{
					if (!string.IsNullOrWhiteSpace(Model.PhotoPath))
					{
						using (Html.BeginForm("DeletePhoto", "AccountProfile", FormMethod.Post))
						{
							<span class="delete-icon"></span>
							@Html.HiddenFor(m => m.UserId)
						}
					}
					<span class="edit-icon"></span>
				}
			</div>
			@if (isAdminOrMe)
			{
				<div class="user-upload-photo hide">
					@using (Html.BeginForm("EditPhoto", "AccountProfile", FormMethod.Post, new { @enctype = "multipart/form-data" }))
					{
						@Html.ValidationSummary()
						<div class="file-container">
							<span class="btn-file">
								<input type="file" name="photoUploadFile" id="PhotoUploadFile" data-val-required="Файл не выбран" data-val="true" accept="image/x-png, image/gif, image/jpeg">
							</span>
							<span class="clear-input"></span>
							<input class="file-input" id="PhotoUploadFileName" type="text" readonly="readonly" placeholder="Выберите фото" />
						</div>
						@*<div id="progressbar" class="progressbar">
								<div id="progresslabel" class="progressbarlabel"></div>
							</div>*@
						<div class="file-submit">
							<input id="UploadBtn" type="submit" class="button" value="Загрузить" />
						</div>
						@Html.HiddenFor(m => m.UserId)
					}
				</div>
			}
			@if (Request.IsAuthenticated && currentUser != null)
			{
				<div class="user-buttons">
					@if (currentUser.IsMe(Model.UserId))
					{
						<a href="@(WebBuilder.BuildActionUrl<AccountProfileController>(o => o.Messages()))">
							Личные сообщения
							<span class="font13">(@currentUser.InboxMessageCount)</span>
						</a>
						<a href="@Constants.JavaScriptVoid">Мои закладки</a>
					}
					else
					{
						<a href="@(WebBuilder.BuildActionUrl<AccountProfileController>(o => o.CreateMessage(), new Dictionary<string, object> { { "name", Model.UserName } }))">
							Отправить ЛС
						</a>
					}
					@if (isAdminOrMe)
					{
						<a href="@(WebBuilder.BuildActionUrl<AccountProfileController>(o => o.EditProfile(Model.UserId)))">Редактировать профиль</a>
					}
					@if (isMainAdminOrAdmin && currentUser.IsMe(Model.UserId))
					{
						<a href="@(WebBuilder.BuildActionUrl<AdministrationController>(o => o.Index()))">Администрирование</a>
					}
				</div>
			}
		</div>
		<div class="profile-right-bar">
			<table class="profile-info">
				<tr>
					<td class="title" colspan="2">Основная информация</td>
				</tr>
				<tr>
					<td>Имя на сайте:</td>
					<td>@Model.UserName</td>
				</tr>
				<tr>
					<td>Email:</td>
					<td>
						@if (isAdminOrMe || Model.ShowEmail)
						{
							<a href="@Html.Raw(string.Concat("mailto:", Model.UserEmail))">@Model.UserEmail</a>
						}
						else
						{
							<span class="hide-email">Email скрыт пользователем</span>
						}

					</td>
				</tr>
				<tr>
					<td>Группа пользователя:</td>
					<td>@Model.UserRole</td>
				</tr>
				<tr>
					<td>Имя:</td>
					<td>@Model.FirstName</td>
				</tr>
				<tr>
					<td>Фамилия:</td>
					<td>@Model.LastName</td>
				</tr>
				<tr>
					<td>Возраст:</td>
					<td>@Model.Age</td>
				</tr>
				<tr>
					<td>Пол:</td>
					<td>@Model.SexName</td>
				</tr>
				<tr>
					<td class="title" colspan="2">Дополнительная информация</td>
				</tr>
				<tr>
					<td>Деятельность:</td>
					<td>@Model.Activity</td>
				</tr>
				<tr>
					<td>Интересы:</td>
					<td>@Model.AboutMe</td>
				</tr>
				<tr>
					<td>Дата рождения:</td>
					<td>@(Model.DateBirth.HasValue ? Model.DateBirth.Value.ToString("dd MMMM yyyy", CultureInfo.CurrentCulture) : string.Empty)</td>
				</tr>
				<tr>
					<td>Адрес:</td>
					<td>@Model.Address</td>
				</tr>
				<tr>
					<td>Стаж:</td>
					<td>@Model.Experience</td>
				</tr>
				<tr>
					<td>Зарегистрирован:</td>
					<td>@Model.CreateDate.ToShortDateString()</td>
				</tr>
				<tr>
					<td>Последняя активность:</td>
					<td>@Model.LastActivity.ToString("dd.MM.yyyy HH:mm:ss")</td>
				</tr>
				<tr>
					<td class="title" colspan="2">Связь</td>
				</tr>
				<tr>
					<td>Сайт:</td>
					<td><a href="@Model.SiteLink" target="_blank">@Model.SiteLink</a></td>
				</tr>
				<tr>
					<td>ICQ:</td>
					<td>@Model.Icq</td>
				</tr>
				<tr>
					<td>Skype:</td>
					<td><a href="@Html.Raw(string.Format("skype:{0}?userinfo", Model.Skype))">@Model.Skype</a></td>
				</tr>
				<tr>
					<td>BattleLog:</td>
					<td>@Model.BattleLog</td>
				</tr>
				<tr>
					<td>Steam:</td>
					<td>@Model.Steam</td>
				</tr>
			</table>
		</div>
	</div>
</div>

<script type="text/javascript">
	$(document).ready(function () {
		site.profile.initProfileInfo.init();
	});
</script>