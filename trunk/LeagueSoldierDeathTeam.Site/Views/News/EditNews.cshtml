@using LeagueSoldierDeathTeam.Site.Classes
@using LeagueSoldierDeathTeam.Site.Controllers
@model LeagueSoldierDeathTeam.Site.Models.News.EditNewsModel

@{
	ViewBag.Title = Model.Id.HasValue ? "Редактирование новости" : "Создание новости";
}

<div class="transparent-border">
	<div class="simple-page-body section-shadow">
		<div class="section-module-header">
			<div class="module-title">@ViewBag.Title</div>
		</div>
		<div class="section-module-body">
			<div class="back">
				<a class="button" href="@(WebBuilder.BuildActionUrl<NewsController>(m => m.Index()))">
					<span class="back-arrow"></span>Вернуться к новостям
				</a>
			</div>
			<div class="form-container">
				@using (Html.BeginForm("EditNews", "News", FormMethod.Post))
				{
					@Html.HiddenFor(m => m.Id)
					@Html.HiddenFor(m => m.WriterId)
					@Html.HiddenFor(m => m.HiddenPlatformIds)

					<div class="form-border">
						@Html.ValidationSummary()
						<div class="container-item">
							@Html.LabelFor(m => m.Title)
							<div class="field-container">
								@Html.TextBoxFor(m => m.Title)
							</div>
						</div>
						<div class="container-item">
							@Html.LabelFor(m => m.NewsCategoryId)
							<div class="field-container">
								@Html.DropDownListFor(m => m.NewsCategoryId, new SelectList(Model.NewsCategories, "Id", "Name"))
							</div>
						</div>
						<div class="container-item">
							@Html.LabelFor(m => m.PlatformIds)
							<div class="field-container">
								<div class="wrap-platforms">
									@foreach (var platform in Model.Platforms)
									{
										var isActive = Model.PlatformIds.Contains(platform.Id);

										<span class="platform-tag @Html.Raw(isActive ? "active" : string.Empty)" data-active="@Html.Raw(isActive ? "true" : "false")" data-id="@platform.Id">
											@platform.Name
											<span class="@Html.Raw(isActive ? "platform-icon" : string.Empty)" data-type="platform-icon"></span>
										</span>
									}
								</div>
							</div>
						</div>
						<div class="container-item">
							@Html.LabelFor(m => m.Description)
							<div class="field-container">
								@Html.TextAreaFor(m => m.Description, new { @rows = "10", @class = "resize-none" })
								<div class="description-preview"></div>
							</div>
						</div>
					</div>

					<div class="form-buttons">
						<span class="preview-link">Предварительный просмотр</span>
						<input type="submit" value="@Html.Raw(Model.Id.HasValue ? "Редактировать" : "Создать")" />
					</div>
				}
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
	$(document).ready(function () {
		site.news.initEdit.init();
	});
</script>