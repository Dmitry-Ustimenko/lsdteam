@using LeagueSoldierDeathTeam.Business.Classes.Enums
@using LeagueSoldierDeathTeam.Business.Classes.Extensions
@using LeagueSoldierDeathTeam.Site.Classes
@using LeagueSoldierDeathTeam.Site.Controllers
@model LeagueSoldierDeathTeam.Site.Models.News.NewsModel

@{
	ViewBag.Title = "Новости";
	var currentUser = AppContextCustom.Current.CurrentUser;
}

<div class="transparent-border">
	<div class="simple-page-body section-shadow">
		<div class="section-module-header">
			<div class="module-title">@ViewBag.Title</div>
		</div>
		<div class="section-module-body">
			<div class="news">
				<div id="form">
					@using (Html.BeginForm())
					{
						<div class="news-header">
							<span>
								Категория:
								@Html.DropDownListFor(m => m.NewsCategoryId, new SelectList(Model.NewsCategories, "Id", "Name"), "Все")
								&nbsp;
								Платформа:
								@Html.DropDownListFor(m => m.PlatformId, new SelectList(Model.Platforms, "Id", "Name"), "Все")
								&nbsp;
								Сортировка:
								@Html.DropDownListFor(m => m.SortId, new SelectList(EnumEx.ToDictionary<NewsSort>(), "Key", "Value"))
							</span>
							@if (Request.IsAuthenticated && currentUser != null)
							{
								if (currentUser.Role == RoleEnum.MainAdministrator || currentUser.Role == RoleEnum.Administrator || currentUser.Role == RoleEnum.Moderator)
								{
									<span class="news-write-link">
										<a class="button" href="@(WebBuilder.BuildActionUrl<NewsController>(o => o.CreateNews()))">Создать</a>
									</span>
								}
							}
						</div>
					}
				</div>
				<div id="content" class="news-body">
					@{ Html.RenderAction("NewsData", Model); }
				</div>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
	$(document).ready(function () {
		site.news.initGrid.init({
			urls: {
				refreshGrid: '@(WebBuilder.BuildActionUrl<NewsController>(m => m.NewsData(null)))'
			}
		});
	});
</script>
